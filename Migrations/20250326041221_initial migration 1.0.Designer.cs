// <auto-generated />
using System;
using EmpAttendanceSQLite.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EmpAttendanceSQLite.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250326041221_initial migration 1.0")]
    partial class initialmigration10
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.3");

            modelBuilder.Entity("EmpAttendanceSQLite.Models.BiometricLog", b =>
                {
                    b.Property<int>("LogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("BMEmployeeId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("BatchCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<int>("DeviceId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("InOut")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("TEXT");

                    b.Property<string>("ManualEntryRemark")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("PunchTime")
                        .HasColumnType("TEXT");

                    b.Property<int>("PunchTypeFlag")
                        .HasColumnType("INTEGER");

                    b.Property<string>("RecordType")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("TEXT");

                    b.Property<int>("StatusCode")
                        .HasColumnType("INTEGER");

                    b.Property<int>("VerificationMode")
                        .HasColumnType("INTEGER");

                    b.HasKey("LogId");

                    b.ToTable("BiometricLogs");
                });

            modelBuilder.Entity("EmpAttendanceSQLite.Models.BiometricMachine", b =>
                {
                    b.Property<int>("MachineId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("BMMachineId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<string>("MachineDescription")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("TEXT");

                    b.Property<string>("MachineName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("MachineId");

                    b.ToTable("BiometricMachines");
                });

            modelBuilder.Entity("EmpAttendanceSQLite.Models.CompanyInfo", b =>
                {
                    b.Property<int>("CompanyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CompanyAddress")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<string>("ContactNo")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("EmailId")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("TEXT");

                    b.Property<TimeSpan>("ShiftEnd")
                        .HasColumnType("TEXT");

                    b.Property<TimeSpan>("ShiftStart")
                        .HasColumnType("TEXT");

                    b.Property<string>("Website")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("TEXT");

                    b.HasKey("CompanyId");

                    b.ToTable("CompanyInfos");

                    b.HasData(
                        new
                        {
                            CompanyId = 1,
                            CompanyAddress = "123, Tech Park, Mumbai",
                            CompanyName = "ABC Pvt Ltd",
                            ContactNo = "+91-9876543210",
                            CreatedAt = new DateTime(2025, 3, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailId = "contact@abc.com",
                            ShiftEnd = new TimeSpan(0, 20, 0, 0, 0),
                            ShiftStart = new TimeSpan(0, 8, 30, 0, 0),
                            Website = "https://www.abc.com"
                        });
                });

            modelBuilder.Entity("EmpAttendanceSQLite.Models.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<int>("BMEmployeeId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("ContactNumber1")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("TEXT");

                    b.Property<string>("ContactNumber2")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Department")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Designation")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("EmailId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("EmployeeCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("EmployeeName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("HourlySalary")
                        .HasColumnType("DECIMAL(10,2)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("JoiningDate")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("MonthlySalary")
                        .HasColumnType("DECIMAL(10,2)");

                    b.Property<TimeSpan>("ShiftEnd")
                        .HasColumnType("TEXT");

                    b.Property<TimeSpan>("ShiftStart")
                        .HasColumnType("TEXT");

                    b.HasKey("EmployeeId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("EmpAttendanceSQLite.Models.LoginUser", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Role")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.HasKey("UserId");

                    b.ToTable("LoginUsers");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            CreatedAt = new DateTime(2025, 3, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            PasswordHash = "sadmin",
                            Role = 1,
                            UserName = "sadmin"
                        },
                        new
                        {
                            UserId = 2,
                            CreatedAt = new DateTime(2025, 3, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            PasswordHash = "admin",
                            Role = 2,
                            UserName = "admin"
                        },
                        new
                        {
                            UserId = 3,
                            CreatedAt = new DateTime(2025, 3, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            PasswordHash = "emp",
                            Role = 3,
                            UserName = "emp"
                        });
                });

            modelBuilder.Entity("EmpAttendanceSQLite.Models.MissingLog", b =>
                {
                    b.Property<int>("MissingLogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("BMEmployeeId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("BatchCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("MissingType")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("PunchDate")
                        .HasColumnType("TEXT");

                    b.HasKey("MissingLogId");

                    b.ToTable("MissingLogs");
                });
#pragma warning restore 612, 618
        }
    }
}
